name: Badminton Court Monitor
on:
  schedule:
    # Run every 5 minutes
    - cron: '*/10 * * * *'
  # Also run manually for testing
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    name: Check Court Availability
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Debug - Show scheduling info
        run: |
          echo "=== MAIN WORKFLOW DEBUG INFO ==="
          echo "Current time: $(date)"
          echo "UTC time: $(date -u)"
          echo "Workflow run ID: ${{ github.run_id }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Job: ${{ github.job }}"
          echo "Run number: ${{ github.run_number }}"
          echo "Run attempt: ${{ github.run_attempt }}"
          echo "Scheduled time: ${{ github.event.schedule }}"
          echo "=== END MAIN WORKFLOW DEBUG ==="
        
      - name: Run enhanced court monitoring
        id: monitor
        run: |
          echo "=== STARTING ENHANCED MONITORING ==="
          echo "Time: $(date)"
          
          # Run enhanced monitoring script
          OUTPUT=$(node monitor-courts-enhanced.js 2>&1)
          echo "Enhanced monitoring output:"
          echo "$OUTPUT"
          
          # Extract changes data if found
          if echo "$OUTPUT" | grep -q "=== CHANGES_DETECTED ==="; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            
            # Extract the JSON data between markers
            CHANGES_DATA=$(echo "$OUTPUT" | sed -n '/=== CHANGES_DETECTED ===/,/=== END_CHANGES ===/p' | sed '1d;$d')
            echo "changes_data<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGES_DATA" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            
            echo "‚úÖ Changes detected and data extracted!"
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No changes detected"
          fi
          
          echo "=== ENHANCED MONITORING COMPLETED ==="
        
      - name: Send Court Availability Notification
        if: steps.monitor.outputs.changes_detected == 'true'
        run: |
          echo "=== SENDING COURT AVAILABILITY NOTIFICATION ==="
          echo "Time: $(date)"
          
          # Parse the changes data
          CHANGES_DATA='${{ steps.monitor.outputs.changes_data }}'
          echo "Changes data: $CHANGES_DATA"
          
          # Extract title and body from the JSON
          TITLE=$(echo "$CHANGES_DATA" | jq -r '.title // "üè∏ Court Available!"')
          BODY=$(echo "$CHANGES_DATA" | jq -r '.body // "New courts available!"')
          
          echo "Notification title: $TITLE"
          echo "Notification body: $BODY"
          
          # Send notification with actual court data
          RESPONSE=$(curl -s -H "Content-Type: application/json" \
               -X POST "https://exp.host/--/api/v2/push/send" \
               -d '{
                 "to": "${{ secrets.EXPO_PUSH_TOKEN }}",
                 "title": "'"$TITLE"'",
                 "body": "'"$BODY"'",
                 "data": { 
                   "source": "court_availability", 
                   "run_id": "${{ github.run_id }}",
                   "event": "${{ github.event_name }}",
                   "time": "$(date)",
                   "changes": true
                 },
                 "sound": "default"
               }')
          
          echo "Response from Expo: $RESPONSE"
          
          if echo "$RESPONSE" | grep -q '"status":"ok"'; then
            echo "‚úÖ Court availability notification sent successfully!"
          else
            echo "‚ùå Court availability notification failed:"
            echo "$RESPONSE"
          fi
          
          echo "=== END COURT AVAILABILITY NOTIFICATION ==="
        
      - name: Log completion
        run: |
          echo "=== WORKFLOW COMPLETED ==="
          echo "Completion time: $(date)"
          echo "Run ID: ${{ github.run_id }}"
          echo "Event type: ${{ github.event_name }}"
          echo "Changes detected: ${{ steps.monitor.outputs.changes_detected }}"
          if [ "${{ steps.monitor.outputs.changes_detected }}" == "true" ]; then
            echo "‚úÖ Court availability notification sent!"
          else
            echo "‚úÖ No changes - no notification sent"
          fi
          echo "Next scheduled run: in 5 minutes" 
