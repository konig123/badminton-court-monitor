name: Badminton Court Monitor
on:
  schedule:
    # Run every 5 minutes
    - cron: '*/5 * * * *'
  # Also run manually for testing
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    name: Check Court Availability
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Debug - Show current time
        run: |
          echo "=== WORKFLOW DEBUG INFO ==="
          echo "Current time: $(date)"
          echo "Workflow run ID: ${{ github.run_id }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "=== END DEBUG INFO ==="
        
      - name: Run court monitoring
        id: monitor
        run: |
          echo "=== STARTING MONITORING ==="
          echo "Time: $(date)"
          
          # Run monitoring and capture output
          OUTPUT=$(npm start 2>&1)
          echo "Monitoring output:"
          echo "$OUTPUT"
          
          # Check if changes were detected
          if echo "$OUTPUT" | grep -q "Found.*changes"; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "changes_output=$OUTPUT" >> $GITHUB_OUTPUT
            echo "‚úÖ Changes detected!"
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No changes detected"
          fi
          
          echo "=== MONITORING COMPLETED ==="
        
      - name: Send Test Notification
        run: |
          echo "=== SENDING TEST NOTIFICATION ==="
          echo "Time: $(date)"
          
          # Send test notification to verify system works
          RESPONSE=$(curl -s -H "Content-Type: application/json" \
               -X POST "https://exp.host/--/api/v2/push/send" \
               -d '{
                 "to": "${{ secrets.EXPO_PUSH_TOKEN }}",
                 "title": "üè∏ Court Monitor Active",
                 "body": "GitHub Actions is monitoring courts. Last check: $(date)",
                 "data": { "source": "github_actions", "run_id": "${{ github.run_id }}" },
                 "sound": "default"
               }')
          
          echo "Response from Expo: $RESPONSE"
          
          if echo "$RESPONSE" | grep -q '"status":"ok"'; then
            echo "‚úÖ Test notification sent successfully!"
          else
            echo "‚ùå Test notification failed:"
            echo "$RESPONSE"
          fi
          
          echo "=== END TEST NOTIFICATION ==="
        
      - name: Send Change Notification
        if: steps.monitor.outputs.changes_detected == 'true'
        run: |
          echo "=== SENDING CHANGE NOTIFICATION ==="
          
          # Send push notification for actual changes
          curl -H "Content-Type: application/json" \
               -X POST "https://exp.host/--/api/v2/push/send" \
               -d '{
                 "to": "${{ secrets.EXPO_PUSH_TOKEN }}",
                 "title": "üè∏ Court Available!",
                 "body": "New courts available in your area. Check the GitHub Actions logs for details.",
                 "data": { "source": "github_actions", "changes": true },
                 "sound": "default"
               }'
          
          echo "‚úÖ Change notification sent!"
        
      - name: Log completion
        run: |
          echo "=== WORKFLOW COMPLETED ==="
          echo "Completion time: $(date)"
          echo "Run ID: ${{ github.run_id }}"
          echo "Next scheduled run: in 5 minutes" 
